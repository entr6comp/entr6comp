grammar Numbers;

options 
{
   language=CSharp_v4_5;
}

number: BINARY;

NEWLINE : [\r\n ]+;

EXPRESSAO_FINAL: EPAREN EXPRESSAO_FINAL DPAREN EXPRESSAO | NUMBER EXPRESSAO;

EXPRESSAO: OPERADOR EXPRESSAO_PAREN;

EXPRESSAO_PAREN: EPAREN EXPRESSAO_FINAL DPAREN | NUMBER;

NUMBER: HEXA_DECIMAL|REAL_DECIMAL|BINARY|DECIMAL;

HEXA_DECIMAL: [0][xX][0-9a-fA-F]+;

REAL_DECIMAL : '-'? NUMERIC_DIGIT+ '.' NUMERIC_DIGIT+ ([eE][+-]? NUMERIC_DIGIT+)?;

BINARY : BIN_DIGIT+ 'b' ;

DECIMAL: '-'? NUMERIC_DIGIT+;

EPAREN: '(';

DPAREN: ')';

OPERADOR: [+]|[-]|[*]|[/]|[^];

STATUS: 'status';

RESET: 'reset';

BIN_DIGIT : [01];

NUMERIC_DIGIT: [0-9];

WS : [ \r\t\u000C\n]+ -> channel(HIDDEN)  ;






